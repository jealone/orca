# Rejects all non-GET requests if set to true.
#
# This option is useful as anti-DoS protection for servers
# accepting only GET requests. The request size is limited
# by ReadBufferSize if GetOnly is set.
#
# Server accepts all the requests by default.
get_only: false

# Will not pre parse Multipart Form data if set to true.
#
# This option is useful for servers that desire to treat
# multipart form data as a binary blob, or choose when to parse the data.
#
# Server pre parses multipart form data by default.
disable_multipart_parse: false

# Aggressively reduces memory usage at the cost of higher CPU usage
# if set to true.
#
# Try enabling this option only if the server consumes too much memory
# serving mostly idle keep-alive connections. This may reduce memory
# usage by more than 50%.
#
# Aggressive memory usage reduction is disabled by default.
reduce_memory_usage: false

# Logs all errors, including the most frequent
# 'connection reset by peer', 'broken pipe' and 'connection timeout'
# errors. Such errors are common in production serving real-world
# clients.
#
# By default the most frequent errors such as
# 'connection reset by peer', 'broken pipe' and 'connection timeout'
# are suppressed in order to limit output log traffic.
all_errors: false

tcp:
  # Whether to enable tcp keep-alive connections.
  #
  # Whether the operating system should send tcp keep-alive messages on the tcp connection.
  #
  # By default tcp keep-alive connections are disabled.
  tcp_keepalive: false

  # Period between tcp keep-alive messages.
  #
  # TCP keep-alive period is determined by operation system by default.
  tcp_keepalive_interval: 0
conn:

  # The maximum number of concurrent connections the server may serve.
  #
  # DefaultConcurrency(256 * 1024) is used if not set.
  #
  # Concurrency only works if you either call Serve once, or only ServeConn multiple times.
  # It works with ListenAndServe as well.
  concurrency: 0

  # SleepWhenConcurrencyLimitsExceeded is a duration to be slept of if
  # the concurrency limit in exceeded (default [when is 0]: don't sleep
  # and accept new connections immidiatelly).
  concurrency_limits_wait: 0

  # Whether to disable keep-alive connections.
  #
  # The server will close all the incoming connections after sending
  # the first response to client if this option is set to true.
  #
  # By default keep-alive connections are enabled.
  disable_keepalive: false


  # Maximum number of concurrent client connections allowed per IP.
  #
  # By default unlimited number of concurrent connections
  # may be established to the server from a single IP address.
  max_connections: 0


  # ReadTimeout is the amount of time allowed to read
  # the full request including body. The connection's read
  # deadline is reset when the connection opens, or for
  # keep-alive connections after the first byte has been read.
  #
  # By default request read timeout is unlimited.
  read_timeout: 0

  # WriteTimeout is the maximum duration before timing out
  # writes of the response. It is reset after the request handler
  # has returned.
  #
  # By default response write timeout is unlimited.
  write_timeout: 0

  # IdleTimeout is the maximum amount of time to wait for the
  # next request when keep-alive is enabled. If IdleTimeout
  # is zero, the value of ReadTimeout is used.
  idle_timeout: 0

buffer:

  # Per-connection buffer size for requests' reading.
  # This also limits the maximum header size.
  #
  # Increase this buffer if your clients send multi-KB RequestURIs
  # and/or multi-KB headers (for example, BIG cookies).
  #
  # Default buffer size(4096) is used if not set.
  read_buffer_size: 0

  # Per-connection buffer size for responses' writing.
  #
  # Default buffer size(4096) is used if not set.
  write_buffer_size: 0
header:

  # Server name for sending in response headers.
  #
  # Default server name(fasthttp) is used if left blank.
  server: orca

  # Header names are passed as-is without normalization
  # if this option is set.
  #
  # Disabled header names' normalization may be useful only for proxying
  # incoming requests to other servers expecting case-sensitive
  # header names. See https://github.com/valyala/fasthttp/issues/57
  # for details.
  #
  # By default request and response header names are normalized, i.e.
  # The first letter and the first letters following dashes
  # are uppercased, while all the other letters are lowercased.
  # Examples:
  #
  #     * HOST -> Host
  #     * content-type -> Content-Type
  #     * cONTENT-lenGTH -> Content-Length
  disable_header_names_normalizing: false

  # NoDefaultServerHeader, when set to true, causes the default Server header
  # to be excluded from the Response.
  #
  # The default Server header value is the value of the Name field or an
  # internal default value in its absence. With this option set to true,
  # the only time a Server header will be sent is if a non-zero length
  # value is explicitly provided during a request.
  no_default_server_header: false

  # NoDefaultDate, when set to true, causes the default Date
  # header to be excluded from the Response.
  #
  # The default Date header value is the current date value. When
  # set to true, the Date will not be present.
  no_default_date: false

  # NoDefaultContentType, when set to true, causes the default Content-Type
  # header to be excluded from the Response.
  #
  # The default Content-Type header value is the internal default value. When
  # set to true, the Content-Type will not be present.
  no_default_content_type: false

request:
  # Maximum number of requests served per connection.
  #
  # The server closes connection after the last request.
  # 'Connection: close' header is added to the last response.
  #
  # By default unlimited number of requests may be served per connection.
  max_requests: 0

  # Maximum request body size.
  #
  # The server rejects requests with bodies exceeding this limit.
  #
  # Request body size is limited by DefaultMaxRequestBodySize by default.
  max_request_body_size: 0

access_log:
  logfile: ""
  max_size: 0
  max_backups: 0
  compress: false